apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  #tls:
  #- hosts:
  #  - demo.magestore.com
  #  secretName: comodo-secret
  rules:
  - host: demo.magestore.com
    http:
      paths:
      - path: /
        backend:
          serviceName: demo-pos-mvp
          servicePort: 80
  backend:
    serviceName: demo-pos-mvp
    servicePort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: demo-pos-mvp
spec:
  selector:
    app: demo-pos-mvp
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: demo-pos-mvp
spec:
  selector:
    matchLabels:
      app: demo-pos-mvp # has to match .spec.template.metadata.labels
  serviceName: "demo-pos-mvp"
  replicas: 4 # by default is 1
  updateStrategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: demo-pos-mvp # has to match .spec.selector.matchLabels
    spec:
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 10
      restartPolicy: Always
      hostAliases:
      - ip: "172.31.106.149"
        hostnames:
        - "db"
      containers:
      # Prepare data when first pod is creating
      - name: magento
        image: magestore/magento:2.2.6
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "chown -R ubuntu:ubuntu /var/www/html"]
        ports:
        - containerPort: 8080
        - containerPort: 80443
      - name: c226-mvp
        image: magestore/apache-php:7.1
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: demo-data
          mountPath: /var/www/html
          subPath: magento_c226_mvp
      volumes:
      - name: demo-data
        persistentVolumeClaim:
          claimName: demo-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demo-data
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Block
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: standard
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  iopsPerGB: "10"
  fsType: ext4
reclaimPolicy: Retain
volumeBindingMode: Immediate
